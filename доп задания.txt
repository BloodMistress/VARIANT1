//быки и коровы

#include <iostream>
#include <ctime> // для ф-ии time()
using namespace std;

string random(string RandomNumber) {
    int a, b, c, d;
    setlocale(0, "");
    srand(time(0)); // рандомизация генератора случайных чисел 
    do
        a = rand() % 10;
    while (a == 0);

    do
        b = rand() % 10;
    while (b == a);

    do
        c = rand() % 10;
    while (c == a || c == b);

    do
        d = rand() % 10;
    while (d == a || d == b || d == c);

    RandomNumber = to_string(a) + to_string(b) + to_string(c) + to_string(d);
    return RandomNumber;
}

int bull(string RandomNumber, string Number)
{
    int k = 0;
    for (int i = 0; i < RandomNumber.size(); i++)
    {
        if (RandomNumber[i] == Number[i])
            k++;
    }
    return k;
}

int cow(string RandomNumber, string Number)
{
    int k = 0;
    for (int i = 0; i < RandomNumber.size(); i++)
    {
        if ((RandomNumber[i] != Number[i]) && (Number.find(RandomNumber[i]) != string::npos))
            k++;
    }
    return k;
}

int main()
{
    string RandomNumber;
    RandomNumber = random(RandomNumber);
    string Number;
    // cout << "ans: " << RandomNumber << endl;

    cout << "Введите своё число:";
    cin >> Number;
    while ((bull(RandomNumber, Number) != 4)) {
        cout << "Bulls: " << bull(RandomNumber, Number) << endl;
        cout << "Cows: " << cow(RandomNumber, Number) << endl;

        cout << "Введите своё число:";
        cin >> Number;
    }
    cout << "Ты умничка!!!";

    return 0;
}







//монахи

#include <iostream>
#include <stdio.h>
#include <time.h>
using namespace std;

    int monks[600][4];
    int cnt = -1;
    int chs = 100;
    int klv = 0;
    int a = 0;
    int b = 0;
    bool trig = false;
    bool trig1 = false;
    bool trig2 = false;
    bool trig3 = false;
    bool megatrig = false;
    int teachers[600];
    int teachers1[600];
    int cnt1 = -1;
    int cnt2 = -1;
main(){
    setlocale(LC_ALL, "Russian");
    while (chs != 0) {
        cnt++;
        cout << "Введите информацию о монахах в одну строку(номера монахов от 1 до 600, 1й Святой Павел):\n";
        cin >> monks[cnt][0];
        cin >> monks[cnt][1];
        cin >> monks[cnt][2];
        cin >> monks[cnt][3];
        cout << "Для выхода введите 0. Если хотите задать еще одну строчку введите 1:\n";
        cin >> chs;
}
    cnt = -1;
    cout << "введите сколько будет монахов:\n";
    cin >> klv;
    if (klv == 1) {
    cout << "введите номер монаха:\n";
    cin >> a;
}
    else if (klv == 2) {
    cout << "введите номера монахов:\n";
    cin >> a;
    cin >> b;
}
    if (klv == 1) {
    while (a != 1) {
    trig = false;
    for (int q = 0; q < 600; q++) {
    if (trig == true) {
    break;
}
    else {
    for (int j = 0; j < 4; j++) {
    if ((monks[q][j] == a) && (monks[q][0] != a)) {
    cout << a << " - монах, его учитель: " << monks[q][0] << ";\n"; //ищем учителя вплоть до первого
    a = monks[q][0];
    trig = true;
}
}
}
}
    if (trig==false) {
    cout<< a << " - не монах\n";
    a = 1;
}
//system("pause");
}
}

    else if (klv == 2) {

    while (a != 1) {
    trig1 = false;
    for (int q = 0; q < 600; q++) {
    if (trig1 == true) {
    break;
}
    else {
    for (int j = 0; j < 4; j++) {
    if ((monks[q][j] == a) && (monks[q][0] != a)) {
//cout « a « " - монах, его учитель: " « monks[q][0] « ";" « endl; //ищем учителей у a
    cnt1++;
    a = monks[q][0];
    teachers[cnt1] = a;
    trig1 = true;
    }
}
}
}
    if (trig1 == false) {
    cout << a << " - не монах\n";
    cout << "номер " << a << " не монах. невозможно найти общего учителя!\n";
    megatrig = true;
    a = 1;
    b = 1;
}
}
    while (b != 1) {
    trig2 = false;
    for (int q = 0; q < 600; q++) {
    if (trig2 == true) {
    break;
}
    else {
    for (int j = 0; j < 4; j++) {
    if ((monks[q][j] == b) && (monks[q][0] != b)) {
//cout « b « " - монах, его учитель: " « monks[q][0] « ";" « endl; //ищем учителей у b
    cnt2++;
    teachers1[cnt2] = b;
    b = monks[q][0];
    trig2 = true;
}
}
}
}
    if (trig2==false) {
    cout << b << " - не монах\n";
    cout << "номер " << b << " не монах. невозможно найти общего учителя!\n";
    megatrig = true;
    a = 1;
    b = 1;
}
}

    if (megatrig==false) {
    for (int l = 0; l < 600; l++) {
    if (trig3 == true) {
    break;
    }
    for (int p = 0; p < 600; p++) {
    if (teachers[l] == teachers1[p]) {
    cout << "ближайший общий учитель введенных монахов: " << teachers1[p] << endl; //ищем ближайщего общего учителя
    trig3 = true;
    break;
}
}
}
}
}
}





//башня

#include <iostream>
#include <cmath>
using namespace std;

void TOH(int n, char from_rod, char to_rod, char temp_rod)
{
	if (n == 0)
		return;
	TOH(n - 1, from_rod, temp_rod, to_rod);
	cout << from_rod << " => " << to_rod << " | ";
	TOH(n - 1, temp_rod, to_rod, from_rod);
}

int main()
{
	int n, k;
	cout << "Please, enter th number of rings N = ";
	cin >> n;

	k = pow(2, n) - 1;
	TOH(n, '1', '3', '2');
	cout << endl << "The number of movements is " << k;
	return 0;
}
